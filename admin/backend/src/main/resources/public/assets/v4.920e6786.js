var y=(t,n,r)=>new Promise((a,i)=>{var p=o=>{try{c(r.next(o))}catch(f){i(f)}},g=o=>{try{c(r.throw(o))}catch(f){i(f)}},c=o=>o.done?a(o.value):Promise.resolve(o.value).then(p,g);c((r=r.apply(t,n)).next())});import{dz as s,fu as m}from"./index.f8b6fa94.js";function w(t){return s.get({url:"/api/cmsDictionary/list",params:t})}function V(t){return s.get({url:"/api/cmsDictionary/detail",params:{id:t}})}function b(t,n){return s.get({url:"/api/cmsDictionary/child",params:{parentId:t,parentData:n}})}function E(t){return s.get({url:"/api/cmsDictionary/tree",params:t})}function S(t){return y(this,null,function*(){const n=yield m();return s.post({url:"/api/cmsDictionary/save",data:t,params:{_csrf:n}},{errorMessageMode:"none"})})}function T(t,n){return s.get({url:"/api/cmsDictionary/verify",params:{code:t,id:n}})}var u,l=new Uint8Array(16);function v(){if(!u&&(u=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(l)}var D=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function h(t){return typeof t=="string"&&D.test(t)}var e=[];for(var d=0;d<256;++d)e.push((d+256).toString(16).substr(1));function x(t){var n=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,r=(e[t[n+0]]+e[t[n+1]]+e[t[n+2]]+e[t[n+3]]+"-"+e[t[n+4]]+e[t[n+5]]+"-"+e[t[n+6]]+e[t[n+7]]+"-"+e[t[n+8]]+e[t[n+9]]+"-"+e[t[n+10]]+e[t[n+11]]+e[t[n+12]]+e[t[n+13]]+e[t[n+14]]+e[t[n+15]]).toLowerCase();if(!h(r))throw TypeError("Stringified UUID is invalid");return r}function U(t,n,r){t=t||{};var a=t.random||(t.rng||v)();if(a[6]=a[6]&15|64,a[8]=a[8]&63|128,n){r=r||0;for(var i=0;i<16;++i)n[r+i]=a[i];return n}return x(a)}export{V as a,b,T as c,w as d,E as g,S as s,U as v};
